{
    "openapi": "3.0.3",
    "info": {
        "title": "NSSF Pensioner Self-Service API",
        "version": "1.0.0",
        "description": "Public + authenticated endpoints for Pensioners, Staff, and Admin.",
        "contact": {
            "name": "NSSF Support",
            "email": "support@nssf.test"
        },
        "license": {
            "name": "MIT"
        }
    },
    "paths": {
        "/api/v1/audits/": {
            "get": {
                "operationId": "audits_list",
                "description": "Read-only access to audit logs (Admin only).\nSupports filters: actor, action, model, status_code; ordering by created_at.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "action",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "actor",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "model",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status_code",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "audits"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAuditLogList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/audits/{id}/": {
            "get": {
                "operationId": "audits_retrieve",
                "description": "Read-only access to audit logs (Admin only).\nSupports filters: actor, action, model, status_code; ordering by created_at.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this audit log.",
                        "required": true
                    }
                ],
                "tags": [
                    "audits"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuditLog"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/auth/login/": {
            "post": {
                "operationId": "auth_login_create",
                "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.",
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPairRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPairRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPairRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenObtainPair"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/auth/me/": {
            "get": {
                "operationId": "auth_me_retrieve",
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Me"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "auth_me_update",
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MeRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Me"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "auth_me_partial_update",
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMeRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Me"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/auth/me/change-password/": {
            "post": {
                "operationId": "auth_me_change_password_create",
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/auth/refresh/": {
            "post": {
                "operationId": "auth_refresh_create",
                "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefreshRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefreshRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefreshRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenRefresh"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/auth/register/": {
            "post": {
                "operationId": "auth_register_create",
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Register"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/notifications/": {
            "get": {
                "operationId": "notifications_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "notifications"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedNotificationList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "notifications_create",
                "tags": [
                    "notifications"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/notifications/{id}/": {
            "get": {
                "operationId": "notifications_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "notifications"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "notifications_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "notifications"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "notifications_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "notifications"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNotificationRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNotificationRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNotificationRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "notifications_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "notifications"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/notifications/{id}/mark_read/": {
            "post": {
                "operationId": "notifications_mark_read_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "notifications"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/notifications/mark_all_read/": {
            "post": {
                "operationId": "notifications_mark_all_read_create",
                "tags": [
                    "notifications"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/payments/": {
            "get": {
                "operationId": "payments_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "payments"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedPaymentList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/payments/{id}/": {
            "get": {
                "operationId": "payments_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "payments"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Payment"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/profiles/beneficiaries/": {
            "get": {
                "operationId": "profiles_beneficiaries_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "profiles"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedBeneficiaryList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "profiles_beneficiaries_create",
                "tags": [
                    "profiles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BeneficiaryRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/BeneficiaryRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/BeneficiaryRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Beneficiary"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/profiles/beneficiaries/{id}/": {
            "get": {
                "operationId": "profiles_beneficiaries_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this beneficiary.",
                        "required": true
                    }
                ],
                "tags": [
                    "profiles"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Beneficiary"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "profiles_beneficiaries_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this beneficiary.",
                        "required": true
                    }
                ],
                "tags": [
                    "profiles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BeneficiaryRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/BeneficiaryRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/BeneficiaryRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Beneficiary"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "profiles_beneficiaries_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this beneficiary.",
                        "required": true
                    }
                ],
                "tags": [
                    "profiles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedBeneficiaryRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedBeneficiaryRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedBeneficiaryRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Beneficiary"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "profiles_beneficiaries_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this beneficiary.",
                        "required": true
                    }
                ],
                "tags": [
                    "profiles"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/profiles/me/": {
            "get": {
                "operationId": "profiles_me_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "profiles"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedPensionerProfileList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/profiles/me/{id}/": {
            "get": {
                "operationId": "profiles_me_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "profiles"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PensionerProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "profiles_me_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "profiles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPensionerProfileRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPensionerProfileRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPensionerProfileRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PensionerProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/profiles/me/beneficiaries/": {
            "get": {
                "operationId": "profiles_me_beneficiaries_retrieve",
                "tags": [
                    "profiles"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PensionerProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/reports/summary/": {
            "get": {
                "operationId": "reports_summary_retrieve",
                "tags": [
                    "reports"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/requests/": {
            "get": {
                "operationId": "requests_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "category",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "priority",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "high",
                                "low",
                                "normal"
                            ]
                        },
                        "description": "* `low` - low\n* `normal` - normal\n* `high` - high"
                    },
                    {
                        "in": "query",
                        "name": "requester",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "closed",
                                "in_progress",
                                "rejected",
                                "resolved",
                                "submitted",
                                "under_review"
                            ]
                        },
                        "description": "* `submitted` - submitted\n* `under_review` - under_review\n* `in_progress` - in_progress\n* `resolved` - resolved\n* `rejected` - rejected\n* `closed` - closed"
                    }
                ],
                "tags": [
                    "requests"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedServiceRequestList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "requests_create",
                "tags": [
                    "requests"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceRequestRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceRequestRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceRequestRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceRequest"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/requests/{id}/": {
            "get": {
                "operationId": "requests_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this service request.",
                        "required": true
                    }
                ],
                "tags": [
                    "requests"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceRequest"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "requests_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this service request.",
                        "required": true
                    }
                ],
                "tags": [
                    "requests"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            },
            "patch": {
                "operationId": "requests_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this service request.",
                        "required": true
                    }
                ],
                "tags": [
                    "requests"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            },
            "delete": {
                "operationId": "requests_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this service request.",
                        "required": true
                    }
                ],
                "tags": [
                    "requests"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/requests/{id}/attachments/": {
            "post": {
                "operationId": "requests_attachments_create",
                "description": "Attach a PDF/JPG/PNG (<=5MB) to a request.",
                "summary": "Upload attachment",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this service request.",
                        "required": true
                    }
                ],
                "tags": [
                    "requests"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "required": [
                                    "file"
                                ]
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RequestAttachment"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/service-categories/": {
            "get": {
                "operationId": "service_categories_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "service-categories"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedServiceCategoryList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/service-categories/{id}/": {
            "get": {
                "operationId": "service_categories_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this service category.",
                        "required": true
                    }
                ],
                "tags": [
                    "service-categories"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceCategory"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AuditLog": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "actor": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    },
                    "actor_email": {
                        "type": "string",
                        "readOnly": true
                    },
                    "action": {
                        "type": "string",
                        "readOnly": true
                    },
                    "model": {
                        "type": "string",
                        "readOnly": true
                    },
                    "object_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "status_code": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "path": {
                        "type": "string",
                        "readOnly": true
                    },
                    "changes": {
                        "readOnly": true,
                        "nullable": true
                    },
                    "ip_address": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "action",
                    "actor",
                    "actor_email",
                    "changes",
                    "created_at",
                    "id",
                    "ip_address",
                    "model",
                    "object_id",
                    "path",
                    "status_code"
                ]
            },
            "Beneficiary": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "full_name": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "relationship": {
                        "type": "string",
                        "maxLength": 60
                    },
                    "percentage": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "phone": {
                        "type": "string",
                        "maxLength": 30
                    },
                    "national_id": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "profile": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "full_name",
                    "id",
                    "percentage",
                    "profile",
                    "relationship"
                ]
            },
            "BeneficiaryRequest": {
                "type": "object",
                "properties": {
                    "full_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 120
                    },
                    "relationship": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 60
                    },
                    "percentage": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "phone": {
                        "type": "string",
                        "maxLength": 30
                    },
                    "national_id": {
                        "type": "string",
                        "maxLength": 50
                    }
                },
                "required": [
                    "full_name",
                    "percentage",
                    "relationship"
                ]
            },
            "ChannelEnum": {
                "enum": [
                    "email",
                    "in_app"
                ],
                "type": "string",
                "description": "* `email` - email\n* `in_app` - in_app"
            },
            "Me": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true
                    },
                    "role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RoleEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "full_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "phone": {
                        "type": "string",
                        "maxLength": 30
                    }
                },
                "required": [
                    "email",
                    "id",
                    "role"
                ]
            },
            "MeRequest": {
                "type": "object",
                "properties": {
                    "full_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "phone": {
                        "type": "string",
                        "maxLength": 30
                    }
                }
            },
            "Notification": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "channel": {
                        "$ref": "#/components/schemas/ChannelEnum"
                    },
                    "subject": {
                        "type": "string",
                        "maxLength": 140
                    },
                    "message": {
                        "type": "string"
                    },
                    "was_read": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "sent_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "user": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "message",
                    "sent_at",
                    "subject",
                    "user",
                    "was_read"
                ]
            },
            "NotificationRequest": {
                "type": "object",
                "properties": {
                    "channel": {
                        "$ref": "#/components/schemas/ChannelEnum"
                    },
                    "subject": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 140
                    },
                    "message": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "required": [
                    "message",
                    "subject"
                ]
            },
            "PaginatedAuditLogList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AuditLog"
                        }
                    }
                }
            },
            "PaginatedBeneficiaryList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Beneficiary"
                        }
                    }
                }
            },
            "PaginatedNotificationList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Notification"
                        }
                    }
                }
            },
            "PaginatedPaymentList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Payment"
                        }
                    }
                }
            },
            "PaginatedPensionerProfileList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PensionerProfile"
                        }
                    }
                }
            },
            "PaginatedServiceCategoryList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ServiceCategory"
                        }
                    }
                }
            },
            "PaginatedServiceRequestList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ServiceRequest"
                        }
                    }
                }
            },
            "PatchedBeneficiaryRequest": {
                "type": "object",
                "properties": {
                    "full_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 120
                    },
                    "relationship": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 60
                    },
                    "percentage": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "phone": {
                        "type": "string",
                        "maxLength": 30
                    },
                    "national_id": {
                        "type": "string",
                        "maxLength": 50
                    }
                }
            },
            "PatchedMeRequest": {
                "type": "object",
                "properties": {
                    "full_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "phone": {
                        "type": "string",
                        "maxLength": 30
                    }
                }
            },
            "PatchedNotificationRequest": {
                "type": "object",
                "properties": {
                    "channel": {
                        "$ref": "#/components/schemas/ChannelEnum"
                    },
                    "subject": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 140
                    },
                    "message": {
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "PatchedPensionerProfileRequest": {
                "type": "object",
                "properties": {
                    "dob": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "national_id": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "address": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "city": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "bank_name": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "bank_account": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "next_of_kin_name": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "next_of_kin_phone": {
                        "type": "string",
                        "maxLength": 30
                    },
                    "avatar": {
                        "type": "string",
                        "format": "binary",
                        "nullable": true
                    }
                }
            },
            "Payment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "period_start": {
                        "type": "string",
                        "format": "date"
                    },
                    "period_end": {
                        "type": "string",
                        "format": "date"
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,10}(?:\\.\\d{0,2})?$"
                    },
                    "status": {
                        "$ref": "#/components/schemas/PaymentStatusEnum"
                    },
                    "paid_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "reference": {
                        "type": "string",
                        "maxLength": 60
                    },
                    "pensioner": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "amount",
                    "id",
                    "pensioner",
                    "period_end",
                    "period_start",
                    "reference"
                ]
            },
            "PaymentStatusEnum": {
                "enum": [
                    "processed",
                    "pending",
                    "on_hold"
                ],
                "type": "string",
                "description": "* `processed` - processed\n* `pending` - pending\n* `on_hold` - on_hold"
            },
            "PensionerProfile": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "nssf_number": {
                        "type": "string",
                        "readOnly": true
                    },
                    "dob": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "national_id": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "address": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "city": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "bank_name": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "bank_account": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "next_of_kin_name": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "next_of_kin_phone": {
                        "type": "string",
                        "maxLength": 30
                    },
                    "avatar": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "last_verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "user": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "last_verified_at",
                    "nssf_number",
                    "user"
                ]
            },
            "PriorityEnum": {
                "enum": [
                    "low",
                    "normal",
                    "high"
                ],
                "type": "string",
                "description": "* `low` - low\n* `normal` - normal\n* `high` - high"
            },
            "Register": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 254
                    },
                    "full_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "phone": {
                        "type": "string",
                        "maxLength": 30
                    }
                },
                "required": [
                    "email",
                    "id"
                ]
            },
            "RegisterRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "minLength": 1,
                        "maxLength": 254
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1
                    },
                    "full_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "phone": {
                        "type": "string",
                        "maxLength": 30
                    }
                },
                "required": [
                    "email",
                    "password"
                ]
            },
            "RequestAttachment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "file": {
                        "type": "string",
                        "format": "uri"
                    },
                    "uploaded_by": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "uploaded_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "file",
                    "id",
                    "uploaded_at",
                    "uploaded_by"
                ]
            },
            "RequestAttachmentRequest": {
                "type": "object",
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary"
                    }
                },
                "required": [
                    "file"
                ]
            },
            "RoleEnum": {
                "enum": [
                    "PENSIONER",
                    "STAFF",
                    "ADMIN"
                ],
                "type": "string",
                "description": "* `PENSIONER` - Pensioner\n* `STAFF` - Staff\n* `ADMIN` - Admin"
            },
            "ServiceCategory": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 80
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "ServiceRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RequestAttachment"
                        },
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 140
                    },
                    "description": {
                        "type": "string"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ServiceStatusEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "priority": {
                        "$ref": "#/components/schemas/PriorityEnum"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "resolved_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "requester": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "category": {
                        "type": "integer"
                    },
                    "assigned_to": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "assigned_to",
                    "attachments",
                    "category",
                    "created_at",
                    "description",
                    "id",
                    "requester",
                    "resolved_at",
                    "status",
                    "title",
                    "updated_at"
                ]
            },
            "ServiceRequestRequest": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 140
                    },
                    "description": {
                        "type": "string",
                        "minLength": 1
                    },
                    "priority": {
                        "$ref": "#/components/schemas/PriorityEnum"
                    },
                    "category": {
                        "type": "integer"
                    }
                },
                "required": [
                    "category",
                    "description",
                    "title"
                ]
            },
            "ServiceStatusEnum": {
                "enum": [
                    "submitted",
                    "under_review",
                    "in_progress",
                    "resolved",
                    "rejected",
                    "closed"
                ],
                "type": "string",
                "description": "* `submitted` - submitted\n* `under_review` - under_review\n* `in_progress` - in_progress\n* `resolved` - resolved\n* `rejected` - rejected\n* `closed` - closed"
            },
            "TokenObtainPair": {
                "type": "object",
                "properties": {
                    "access": {
                        "type": "string",
                        "readOnly": true
                    },
                    "refresh": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "access",
                    "refresh"
                ]
            },
            "TokenObtainPairRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1
                    }
                },
                "required": [
                    "email",
                    "password"
                ]
            },
            "TokenRefresh": {
                "type": "object",
                "properties": {
                    "access": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "access"
                ]
            },
            "TokenRefreshRequest": {
                "type": "object",
                "properties": {
                    "refresh": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1
                    }
                },
                "required": [
                    "refresh"
                ]
            }
        }
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000",
            "description": "Local Dev"
        },
        {
            "url": "https://api.nssf.test",
            "description": "Staging/Prod"
        }
    ],
    "externalDocs": {
        "description": "Project Readme",
        "url": "https://example.com/readme"
    }
}